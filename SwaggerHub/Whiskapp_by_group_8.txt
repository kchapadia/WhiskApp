swagger: '2.0'
info:
  description: |
    This is the API documentation for COP 4331 Project Group 8.
    
    If you are the person who responsible for the front-end, you can see the API end points. The API documentationhas been carefully tested but, if you notice any issues please contact me in order to resolve it as soon as possible (you can press to Contact the developer in order to cantact with me).
  version: 1.0.0
  title: Whiskapp by group 8
  contact:
    email: m.aljahdhami@knights.ucf.edu

paths:
  /users:
    post:
      tags:
      - Users
      summary: sign up
      operationId: doSignup
      description: Sign up to Whiskapp
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: signupItem
        description: Signup
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
  
  /users/login:
    post:
      tags:
      - Login
      summary: Logs in
      operationId: doLogin
      description: Logs in to Whiskapp
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginItem
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found

  /users/profile:
    post:
      tags:
      - Profile
      summary: update profile
      operationId: update_Profile
      description: update profile in to Whiskapp
      security:
        - Bearer: []
      responses:
        '200':
          description: 'Will send `Authenticated`'
        '403': 
          description: 'You do not have necessary permissions for the resource'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: updateProfile
        description: update_Profile
        schema:
          $ref: '#/definitions/Profile'
  
  /recipes/create:
    post:
      tags:
      - Create recipes  
      summary: creating recipes 
      operationId: creating_recipes
      description: create recipes
      security:
        - Bearer: []
      responses:
        '200':
          description: 'Will send `Authenticated`'
        '403': 
          description: 'You do not have necessary permissions for the resource'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: creatingRecipes
        description: creating_recipes
        schema:
          $ref: '#/definitions/create'
  
  /recipes:
    get:
      tags:
      - Show recipes
      summary: Show recipes
      operationId: Show_recipes
      description: Show recipes
      security:
        - Bearer: []
      responses:
        '200':
          description: 'Will send `Authenticated`'
        '403': 
          description: 'You do not have necessary permissions for the resource'
  /recipes/{id}:
    get:
      tags:
      - Find recipe by ID
      summary: Find Recipes by ID
      description: Returns recipes
      operationId: getRecipeById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of recipe to return
        required: true
        type: string
      responses:
        200:
          description: successful operation

        400:
          description: Invalid ID supplied
        404:
          description: ID not found
    put:
      tags:
      - Update recipe by ID
      summary: Updated recipe
      description: This can only be done by the logged in user.
      operationId: updaterecipe
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: recipe id that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          $ref: '#/definitions/updateRecipebyID'

      security:
        - Bearer: []
      responses:
        400:
          description: Invalid user supplied
        404:
          description: User not found
    
    delete:
      tags:
      - Delete recipe by ID
      summary: Delete recipe
      description: This can only be done by the logged in user.
      operationId: deleteRecipe
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: The recipe that needs to be deleted
        required: true
        type: string
      security:
        - Bearer: []      
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found

  
definitions:
  Users:
    type: object
    required:
    - name
    - email
    - password
    properties:
      name:
        type: string
        example: "Musaab"
      email:
        type: string
        example: "test@gmail.com"
      password:
        type: string
        example: "Oman2021"
  
  Login:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        example: "testendpoint@mozej.com"
      password:
        type: string
        example: "Oman2020"

  Profile:
    type: object
    required:
    - name
    - email
    - password
    properties:
      name:
        type: string
        example: "Mohammed Azzan"
      email:
        type: string
        example: "testendpoint@mozej.com"
      password:
        type: string
        example: "Oman2020"

  create:
    type: object
    required:
    - title
    - content
    - instructions
    - category
    properties:
      title:
        type: string
        example: "cake2"
      content:
        type: string
        example: "175g (6oz) margarine or softened butter\n175g (6oz) caster sugar\n3 large eggs\n175g (6oz) self-raising flour, sifted\n1tsp baking powder\n1tsp vanilla extract\npinch of salt"
      instructions:
        type: string
        example: "Heat the oven to 180°C (gas mark 4). Lightly grease an 18cm (7in) round cake tin with a little extra butter or margarine and cut a piece of greaseproof paper or non-stick baking parchment to fit the base of the tin.\nPut all the ingredients into a large mixing bowl and beat with a wooden spoon or a hand-held mixer for 1 minute, or until just combined. It's important not to beat the batter too much - just long enough to make it smooth.\nPour or spoon the mixture into the tin, smooth the top and bake on the middle shelf of the oven for about 45-50 minutes. The cake is cooked when it looks well risen and golden; the top should spring back when lightly touched with a fingertip. Another test is to insert a skewer into the centre of the cake - it should come out clean.\nLet the cake sit in the tin for 5 minutes, then gently run a knife around the edge and turn it out onto a wire rack to cool. Serve dusted with icing sugar."
      category:
        type: string
        example: "sweet"
  
  updateRecipebyID:
    type: object
    required:
    - title
    - content
    - instructions
    - category
    properties:
      title:
        type: string
        example: "cake2"
      content:
        type: string
        example: "175g (6oz) margarine or softened butter\n175g (6oz) caster sugar\n3 large eggs\n175g (6oz) self-raising flour, sifted\n1tsp baking powder\n1tsp vanilla extract\npinch of salt"
      instructions:
        type: string
        example: "Heat the oven to 180°C (gas mark 4). Lightly grease an 18cm (7in) round cake tin with a little extra butter or margarine and cut a piece of greaseproof paper or non-stick baking parchment to fit the base of the tin.\nPut all the ingredients into a large mixing bowl and beat with a wooden spoon or a hand-held mixer for 1 minute, or until just combined. It's important not to beat the batter too much - just long enough to make it smooth.\nPour or spoon the mixture into the tin, smooth the top and bake on the middle shelf of the oven for about 45-50 minutes. The cake is cooked when it looks well risen and golden; the top should spring back when lightly touched with a fingertip. Another test is to insert a skewer into the centre of the cake - it should come out clean.\nLet the cake sit in the tin for 5 minutes, then gently run a knife around the edge and turn it out onto a wire rack to cool. Serve dusted with icing sugar."
      category:
        type: string
        example: "sweet"
  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization 
    in: header      

        
host: whiskapp.herokuapp.com
basePath: /api
schemes:
- https