swagger: '2.0'
info:
  description: |
    This is the API documentation for COP 4331 Project Group 8.
    
    If you are the person who responsible for the front-end, you can see the API end points. The API documentationhas been carefully tested but, if you notice any issues please contact me in order to resolve it as soon as possible (you can press to Contact the developer in order to cantact with me).
  version: 1.0.0
  title: Whiskapp by group 8
  contact:
    email: m.aljahdhami@knights.ucf.edu

securityDefinitions:
  Bearerpost:
    type: apiKey
    name: AuthorizationForPost
    in: header
  Bearerget:
    type: apiKey
    name: Authorization 
    in: query

paths:
  /users:
    post:
      tags:
      - Users
      summary: sign up
      operationId: doSignup
      description: Sign up to Whiskapp
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: signupItem
        description: Signup
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found
  
  /users/login:
    post:
      tags:
      - Login
      summary: Logs in
      operationId: doLogin
      description: Logs in to Whiskapp
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginItem
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: OK
        404:
          description: URL Not Found

  /users/profile:
    post:
      tags:
      - Profile
      summary: update profile
      operationId: update_Profile
      description: update profile in to Whiskapp
      security:
        - Bearerpost: []
      responses:
        '200':
          description: 'Will send `Authenticated`'
        '403': 
          description: 'You do not have necessary permissions for the resource'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: updateProfile
        description: update_Profile
        schema:
          $ref: '#/definitions/Profile'

definitions:
  Users:
    type: object
    required:
    - name
    - email
    - password
    properties:
      name:
        type: string
        example: "Musaab"
      email:
        type: string
        example: "test@gmail.com"
      password:
        type: string
        example: "Oman2021"
  
  Login:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        example: "abreijo01@gmail.com"
      password:
        type: string
        example: "alex1234"

  Profile:
    type: object
    required:
    - name
    - email
    - password
    properties:
      name:
        type: string
        example: "Musaab"
      email:
        type: string
        example: "test@gmail.com"
      password:
        type: string
        example: "Oman2021"
        
host: whiskapp.herokuapp.com
basePath: /api
schemes:
- https