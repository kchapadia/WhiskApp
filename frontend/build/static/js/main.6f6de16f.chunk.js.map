{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/recipesConstants.js","actions/recipesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyRecipes/MyRecipes.js","screens/SingleRecipe/SingleRecipe.js","components/Notification.js","components/ForgotPassword/ForgotPassword.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleRecipe/CreateRecipe.js","screens/SingleRecipe/FetchRecipe.js","screens/ProfileScreen/ProfileScreen.js","screens/VerificationScreen/VerificationScreen.js","screens/ResetScreen/ResetScreen.js","App.js","reportWebVitals.js","store.js","reducers/recipesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_VERIFY_REQUEST","USER_VERIFY_SUCCESS","USER_VERIFY_FAIL","USER_RESET_REQUEST","USER_RESET_SUCCESS","USER_RESET_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","RECIPES_LIST_REQUEST","RECIPES_LIST_SUCCESS","RECIPES_LIST_FAIL","RECIPES_CREATE_REQUEST","RECIPES_CREATE_SUCCESS","RECIPES_CREATE_FAIL","RECIPES_UPDATE_REQUEST","RECIPES_UPDATE_SUCCESS","RECIPES_UPDATE_FAIL","RECIPES_DELETE_REQUEST","RECIPES_DELETE_SUCCESS","RECIPES_DELETE_FAIL","deleteRecipeAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyRecipes","search","recipeList","loading","error","recipes","recipeDelete","loadingDelete","errorDelete","successDelete","success","successCreate","recipeCreate","successUpdate","recipeUpdate","get","console","log","marginLeft","marginBottom","filter","filteredRecipe","toLowerCase","includes","reverse","map","recipe","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","instructions","createdAt","substring","SingleRecipe","match","useState","setTitle","setContent","setCategory","setInstructions","date","setDate","params","updatedAt","fetching","onSubmit","preventDefault","put","updateRecipeAction","Group","controlId","Label","Control","rows","Notification","ForgotPassword","props","handleClose","LoginScreen","email","setEmail","password","setPassword","resetEmail","setResetEmail","isOpen","setIsOpen","notification","setNotification","togglePopup","post","setItem","JSON","stringify","resetEmailP","login","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateRecipe","resetHandler","createRecipeAction","Date","toLocaleDateString","FetchRecipe","link","setLink","postFetchLinkData","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","VerificationScreen","temporarytoken","setTemporarytoken","userVerify","verify","ResetScreen","newpassword","setNewPassword","userReset","reset","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"6cAuBeA,EApBA,WACb,OACE,wBACEC,MAAO,CACLC,MAAO,OACPC,SAAU,WACVC,OAAQ,EACRC,QAAS,OACTC,eAAgB,UANpB,SASE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,mBAAf,yC,4EChBGC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAMnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,qB,iBCwDhBC,MAlEf,YAAgC,IAAdC,EAAa,EAAbA,UACVC,EAAWC,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAQR,OAFAI,qBAAU,cAAU,CAACJ,IAGnB,cAACK,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,UAAUC,QAAQ,OAA1D,SACE,eAACjC,EAAA,EAAD,WACE,cAAC6B,EAAA,EAAOK,MAAR,CAAcC,KAAK,IAAnB,mBAEA,cAACN,EAAA,EAAOO,OAAR,CAAe,gBAAc,0BAC7B,eAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,wBAApB,UACE,cAACC,EAAA,EAAD,CAAKpC,UAAU,SAAf,SACGqB,GACC,cAACgB,EAAA,EAAD,CAAMC,QAAM,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,SACZzC,UAAU,UACV0C,SAAU,SAACC,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOC,cAK5C,cAACT,EAAA,EAAD,UACGf,EACC,qCACE,cAACe,EAAA,EAAIU,KAAL,CAAUd,KAAK,aAAf,wBACA,eAACe,EAAA,EAAD,CACEC,MAAK,UAAK3B,EAAS4B,MACnBd,GAAG,0BAFL,UAIE,cAACY,EAAA,EAAYG,KAAb,CAAkBlB,KAAK,WAAvB,wBAWA,cAACe,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYG,KAAb,CAAkBE,QA7CZ,WACpBjC,ECiCkB,uCAAM,WAAOA,GAAP,SAAAkC,EAAA,sDAC1BC,aAAaC,WAAW,YACxBpC,EAAS,CAAEqB,KAAMpC,IAFS,2CAAN,wDDWJ,0BAMJ,cAACgC,EAAA,EAAIU,KAAL,CAAUd,KAAK,SAAf,8B,gBEtBCwB,MA1Cf,YAAmC,IAAZC,EAAW,EAAXA,QAEbpC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAQR,OANAI,qBAAU,WACJJ,GACFoC,EAAQC,KAAK,gBAEd,CAACD,EAASpC,IAGX,qBAAKrB,UAAU,OAAf,SACE,cAACH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAKE,UAAU,aAAf,UACE,gCACE,oBAAIA,UAAU,QAAd,8BACA,mBAAGA,UAAU,WAAb,6DAEF,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAM2D,GAAG,SAAT,SACE,cAACC,EAAA,EAAD,CAAQC,KAAK,KAAK7D,UAAU,gBAA5B,qBAIF,cAAC,IAAD,CAAM2D,GAAG,YAAT,SACE,cAACC,EAAA,EAAD,CACE9B,QAAQ,kBACR+B,KAAK,KACL7D,UAAU,gBAHZ,mC,kCCRD8D,MApBf,YAA0C,IAApBC,EAAmB,EAAnBA,SAAUf,EAAS,EAATA,MAC9B,OACE,qBAAKhD,UAAU,WAAf,SACE,cAACH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAKE,UAAU,OAAf,UACGgD,GACC,qCACE,oBAAIhD,UAAU,UAAd,SAAyBgD,IACzB,0BAGHe,Y,iBChBAC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBC6HtBC,GAAqB,SAACzC,GAAD,8CAAQ,WAAOhB,EAAU0D,GAAjB,yBAAAxB,EAAA,sEAEtClC,EAAS,CACPqB,KAAMiC,KAH8B,EAQlCI,IADWxD,EAPuB,EAOpCG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAZA,SAgBfC,IAAMC,OAAN,uBAA6BhD,GAAM2C,GAhBpB,gBAgB9BM,EAhB8B,EAgB9BA,KAERjE,EAAS,CACPqB,KAAMkC,GACNW,QAASD,IApB2B,kDAuBhCE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QACZnE,EAAS,CACPqB,KAAMmC,GACNU,QAASC,IA7B2B,0DAAR,yD,UClHnBE,OAtBf,YAAkC,IAAD,IAAd3B,YAAc,MAAP,IAAO,EAC/B,OACE,qBACEtE,MAAO,CACLI,QAAS,OACTC,eAAgB,SAChB6F,WAAY,SACZjG,MAAO,OACPkG,OAAQ,QANZ,SASE,cAACC,GAAA,EAAD,CACEpG,MAAO,CACLC,MAAOqE,EACP6B,OAAQ7B,GAEV+B,UAAU,c,UCRHC,GARM,SAAC,GAAoC,IAAD,IAAjC/D,eAAiC,MAAvB,OAAuB,EAAfiC,EAAe,EAAfA,SACxC,OACE,cAAC+B,GAAA,EAAD,CAAOhE,QAASA,EAASvC,MAAO,CAAEwG,SAAU,IAA5C,SACE,iCAAShC,OC2IAiC,OAtIf,YAAyC,IAApBvC,EAAmB,EAAnBA,QAASwC,EAAU,EAAVA,OACtB9E,EAAWC,cAEX8E,EAAa5E,aAAY,SAACC,GAAD,OAAWA,EAAM2E,cACxCC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QAOhBhF,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFiF,EAAehF,aAAY,SAACC,GAAD,OAAWA,EAAM+E,gBAEvCC,EAGPD,EAHFH,QACOK,EAELF,EAFFF,MACSK,EACPH,EADFI,QAIeC,EADIrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,gBAC1CF,QAGSG,EADIvF,aAAY,SAACC,GAAD,OAAWA,EAAMuF,gBAC1CJ,QAsBR,OApBAjF,qBAAU,WACRN,EHtBuB,uCAAM,WAAOA,EAAU0D,GAAjB,yBAAAxB,EAAA,sEAE7BlC,EAAS,CACPqB,KAAMwB,IAHqB,EAQzBa,IADWxD,EAPc,EAO3BG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAY3D,EAAS4D,SAZT,SAgBNC,IAAM6B,IAAN,eAA0BjC,GAhBpB,gBAgBrBM,EAhBqB,EAgBrBA,KAERjE,EAAS,CACPqB,KAAMyB,EACNoB,QAASD,IApBkB,kDAuBvBE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QACZnE,EAAS,CACPqB,KAAM0B,EACNmB,QAASC,IA7BkB,0DAAN,yDGuBlBjE,GACHoC,EAAQC,KAAK,OAEd,CACDvC,EACAsC,EACApC,EACAoF,EACAE,EACAE,IAUA,eAAC,EAAD,CAAY7D,MAAK,uBAAkB3B,GAAYA,EAAS4B,KAAvC,KAAjB,UACG+D,QAAQC,IAAIZ,GACb,cAAC,IAAD,CAAM1C,GAAG,gBAAT,SACE,cAACC,EAAA,EAAD,CAAQrE,MAAO,CAAE2H,WAAY,GAAIC,aAAc,GAAKtD,KAAK,KAAzD,iCAIF,cAAC,IAAD,CAAMF,GAAG,eAAT,SACE,cAACC,EAAA,EAAD,CAAQrE,MAAO,CAAE2H,WAAY,GAAIC,aAAc,GAAKtD,KAAK,KAAzD,gCAIDuC,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzCI,GACC,cAAC,GAAD,CAAc1E,QAAQ,SAAtB,SAAgC0E,IAEjCL,GAAW,cAAC,GAAD,IACXI,GAAiB,cAAC,GAAD,IACjBF,GACCA,EACGe,QAAO,SAACC,GAAD,OACNA,EAAerE,MAAMsE,cAAcC,SAAStB,EAAOqB,kBAEpDE,UACAC,KAAI,SAACC,GAAD,OACH,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMrI,MAAO,CAAEsI,OAAQ,IAAvB,UACE,eAACD,EAAA,EAAK3G,OAAN,CAAa1B,MAAO,CAAEI,QAAS,QAA/B,UACE,sBAEEJ,MAAO,CACLuI,MAAO,QACPC,eAAgB,OAChBC,KAAM,EACNC,OAAQ,UACRC,UAAW,SACXnC,SAAU,IARd,SAWE,cAAC4B,EAAA,EAAU1F,OAAX,CACEkG,GAAIP,IAAKQ,KACTtG,QAAQ,OACRuG,SAAS,IAHX,SAKGX,EAAO1E,UAIZ,gCACE,cAACY,EAAA,EAAD,CAAQ5B,KAAI,kBAAa0F,EAAOY,KAAhC,kBACA,cAAC1E,EAAA,EAAD,CACE9B,QAAQ,SACR9B,UAAU,OACVoD,QAAS,kBA5DNjB,EA4D0BuF,EAAOY,SA3DlDC,OAAOC,QAAQ,kBACjBrH,EAASyD,GAAmBzC,KAFV,IAACA,GAyDL,0BASJ,cAACwF,EAAA,EAAUzF,SAAX,CAAoBmG,SAAS,IAA7B,SACE,eAACT,EAAA,EAAKa,KAAN,WACE,6BACE,eAACC,EAAA,EAAD,CAAO5G,QAAQ,UAAf,wBACc4F,EAAOiB,cAGvB,6BAAY3I,UAAU,kBAAtB,UACE,4CACA,cAAC,IAAD,UAAgB0H,EAAOkB,UACvB,6CACA,cAAC,IAAD,UAAgBlB,EAAOmB,eACvB,yBAAQ7I,UAAU,oBAAlB,uBACa,IACX,sBAAMgD,MAAM,eAAZ,SACG0E,EAAOoB,UAAUC,UAAU,EAAG,mBAhDTrB,EAAOY,cCkExCU,OA5If,YAA2C,IAAnBC,EAAkB,EAAlBA,MAAOxF,EAAW,EAAXA,QAC7B,EAA0ByF,qBAA1B,mBAAOlG,EAAP,KAAcmG,EAAd,KACA,EAA8BD,qBAA9B,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAgCF,qBAAhC,mBAAOP,EAAP,KAAiBU,EAAjB,KACA,EAAwCH,qBAAxC,mBAAOL,EAAP,KAAqBS,EAArB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMrI,EAAWC,cAEX0F,EAAexF,aAAY,SAACC,GAAD,OAAWA,EAAMuF,gBAC1CX,EAAmBW,EAAnBX,QAASC,EAAUU,EAAVV,MAEXE,EAAehF,aAAY,SAACC,GAAD,OAAWA,EAAM+E,gBACjCC,EAAsCD,EAA/CH,QAA+BK,EAAgBF,EAAvBF,MAuChC,OA9BA3E,qBAAU,YACM,uCAAG,8BAAA4B,EAAA,sEACQ6B,IAAM6B,IAAN,uBAA0BkC,EAAMQ,OAAOtH,KAD/C,gBACPiD,EADO,EACPA,KAER+D,EAAS/D,EAAKpC,OACdoG,EAAWhE,EAAKwD,SAChBU,EAAgBlE,EAAKyD,cACrBQ,EAAYjE,EAAKuD,UACjBa,EAAQpE,EAAKsE,WAPE,2CAAH,qDAUdC,KACC,CAACV,EAAMQ,OAAOtH,GAAIoH,IAmBnB,cAAC,EAAD,CAAYvG,MAAM,cAAlB,SACE,eAAC4E,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,+BACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,eAACpG,EAAA,EAAD,CAAMuH,SAdQ,SAACjH,GACrBA,EAAEkH,iBACF1I,EJsH8B,SAACgB,EAAIa,EAAO4F,EAASC,EAAcF,GAAnC,8CAAgD,WAChFxH,EACA0D,GAFgF,yBAAAxB,EAAA,sEAK9ElC,EAAS,CACPqB,KAAM8B,KANsE,EAW1EO,IADWxD,EAV+D,EAU5EG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAhBwC,SAoBvDC,IAAM4E,IAAN,uBACL3H,GAChB,CAAEa,QAAO4F,UAASC,eAAcF,YAChC7D,GAvB4E,gBAoBtEM,EApBsE,EAoBtEA,KAMRjE,EAAS,CACPqB,KAAM+B,GACNc,QAASD,IA5BmE,kDA+BxEE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QACZnE,EAAS,CACPqB,KAAMgC,GACNa,QAASC,IArCmE,0DAAhD,wDItHrByE,CAAmBd,EAAMQ,OAAOtH,GAAIa,EAAO4F,EAASC,EAAcF,IACtE3F,GAAU4F,GAAYC,GAAiBF,IAT5CQ,EAAS,IACTE,EAAY,IACZD,EAAW,IACXE,EAAgB,IAShB7F,EAAQC,KAAK,gBAQP,UACG6C,GAAiB,cAAC,GAAD,IACjBH,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzCI,GACC,cAAC,GAAD,CAAc1E,QAAQ,SAAtB,SAAgC0E,IAElC,eAACnE,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,0BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,QACLC,YAAY,kBACZI,MAAOG,EACPN,SAAU,SAACC,GAAD,OAAOwG,EAASxG,EAAEC,OAAOC,aAIvC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,0BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACEhC,GAAG,WACH1F,YAAY,wBACZ2H,KAAM,EACNvH,MAAO+F,EACPlG,SAAU,SAACC,GAAD,OAAOyG,EAAWzG,EAAEC,OAAOC,aAGxC+F,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,kCACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,cAAC,IAAD,UAAgBG,SAItB,eAACvG,EAAA,EAAK2H,MAAN,CAAYC,UAAU,eAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,2BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACEhC,GAAG,WACH1F,YAAY,yBACZ2H,KAAM,EACNvH,MAAOgG,EACPnG,SAAU,SAACC,GAAD,OAAO2G,EAAgB3G,EAAEC,OAAOC,aAG7C+F,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,mCACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,cAAC,IAAD,UAAgBI,SAItB,eAACxG,EAAA,EAAK2H,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,UACLC,YAAY,4BACZI,MAAO8F,EACPjG,SAAU,SAACC,GAAD,OAAO0G,EAAY1G,EAAEC,OAAOC,aAGzCsD,GAAW,cAAC,GAAD,CAAStC,KAAM,KAC3B,cAACD,EAAA,EAAD,CAAQ9B,QAAQ,UAAUU,KAAK,SAA/B,2BAGA,cAACoB,EAAA,EAAD,CACE5D,UAAU,OACV8B,QAAQ,SACRsB,QAAS,kBA9GEjB,EA8GkB8G,EAAMQ,OAAOtH,GA7GhDoG,OAAOC,QAAQ,kBACjBrH,EAASyD,GAAmBzC,SAE9BsB,EAAQC,KAAK,cAJO,IAACvB,GA2Gb,gCAUJ,eAACyF,EAAA,EAAKtI,OAAN,CAAaU,UAAU,aAAvB,0BACgBuJ,EAAKR,UAAU,EAAG,aCpI3BsB,GARM,SAAC,GAAoC,IAAD,IAAjCvI,eAAiC,MAAvB,OAAuB,EAAfiC,EAAe,EAAfA,SACxC,OACE,cAAC+B,GAAA,EAAD,CAAOhE,QAASA,EAASvC,MAAO,CAAEwG,SAAU,IAA5C,SACE,iCAAShC,OCQAuG,I,cAXQ,SAAAC,GACnB,OACI,qBAAKvK,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAU,aAAaoD,QAASmH,EAAMC,YAA5C,eACCD,EAAM3B,eCuHR6B,OAnHf,YAAmC,IAAZhH,EAAW,EAAXA,QACrB,EAA0ByF,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAgCzB,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAoC3B,mBAAS,IAA7C,mBAAO4B,EAAP,KAAmBC,EAAnB,KACA,EAA4B7B,oBAAS,GAArC,mBAAO8B,EAAP,KAAeC,EAAf,KACA,EAAwC/B,mBAAS,MAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KAEMhK,EAAWC,cAEXI,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvC2E,EAA6B3E,EAA7B2E,QAASC,EAAoB5E,EAApB4E,MAAO/E,EAAaG,EAAbH,SAExBI,qBAAU,WACJJ,GACFoC,EAAQC,KAAK,gBAEd,CAACD,EAASpC,IAEb,IAeM+J,EAAc,WAClBH,GAAWD,IAGb,OACE,gCACCA,GAAU,cAAC,GAAD,CACKpC,QAAS,qCACT,wDACA,eAACvG,EAAA,EAAD,CAAMuH,SAnBH,SAACjH,GACpBA,EAAEkH,iBACFoB,GAAWD,GACXG,EACE,uBACAL,GAEF3J,EX8GuB,SAACuJ,GAAD,8CAAW,WAAOvJ,GAAP,mBAAAkC,EAAA,sEAElClC,EAAS,CAAEqB,KFzImB,uBE2IxBsC,EAAS,CACbC,QAAS,CACP,eAAiB,qBANa,SAUXG,IAAMmG,KAAN,6BAErB,CAAEX,SACF5F,GAbgC,gBAU1BM,EAV0B,EAU1BA,KAMRjE,EAAU,CAAEqB,KFtJkB,qBEsJQ6C,QAASD,IAE/C9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IAlBd,kDAoBlCjE,EAAS,CACPqB,KF1JyB,qBE2JzB6C,QACA,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAzBsB,0DAAX,sDW9GdmG,CAAYX,KAYL,UACE,cAACzI,EAAA,EAAK2H,MAAN,CAAYC,UAAU,aAAtB,SACE,cAAC5H,EAAA,EAAK8H,QAAN,CACE1H,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOoI,EAAcpI,EAAEC,OAAOC,YAG5C,cAACe,EAAA,EAAD,CAAQ9B,QAAQ,UAAUU,KAAK,SAA/B,kCAKFgI,YAAaY,IAE7B,sBAAKpL,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAYgD,MAAM,QAAlB,SACE,sBAAKhD,UAAU,iBAAf,UACGoG,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzC8E,GACE,cAAC,GAAD,CAAcpJ,QAAQ,OAAtB,SAA8BoJ,IAEhC/E,GAAW,cAAC,GAAD,IACZ,eAAC9D,EAAA,EAAD,CAAMuH,SAhDI,SAACjH,GACrBA,EAAEkH,iBACF1I,EXTiB,SAACuJ,EAAOE,GAAR,8CAAqB,WAAOzJ,GAAP,mBAAAkC,EAAA,sEAEtClC,EAAS,CAAEqB,KAAMvC,IAEX6E,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SAUfG,IAAMmG,KAC3B,mBACA,CAAEX,QAAOE,YACT9F,GAboC,gBAU9BM,EAV8B,EAU9BA,KAMRjE,EAAS,CAAEqB,KAAMtC,EAAoBmF,QAASD,IAE9C9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IAlBV,kDAoBtCjE,EAAS,CACPqB,KAAMrC,EACNkF,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAzBwB,0DAArB,sDWSRoG,CAAMhB,EAAOE,KA8CZ,UACE,eAACvI,EAAA,EAAK2H,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,4BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,QACLK,MAAO6H,EACPjI,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOgI,EAAShI,EAAEC,OAAOC,aAIvC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLK,MAAO+H,EACPnI,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOkI,EAAYlI,EAAEC,OAAOC,aAG1C,sBAAK7C,UAAU,4BAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC4D,EAAA,EAAD,CAAQ9B,QAAQ,UAAUU,KAAK,SAA/B,sBAIF,qBAAKxC,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMoD,QAASgI,EAAf,sCAIN,cAACtL,EAAA,EAAD,CAAKE,UAAU,OAAf,SACJ,eAACD,EAAA,EAAD,6BACiB,cAAC,IAAD,CAAM4D,GAAG,YAAT,yCAOrB,qBAAK3D,UAAU,UAAf,SACE,qBAAKA,UAAU,kB,OC8CR2L,OA1Jf,YAAsC,IAAZlI,EAAW,EAAXA,QACxB,EAA0ByF,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAwBzB,mBAAS,IAAjC,mBAAOjG,EAAP,KAAa2I,EAAb,KACA,EAAsB1C,mBACpB,sFADF,mBAAO2C,EAAP,KAAYC,EAAZ,KAGA,EAAgC5C,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAA8C3B,mBAAS,IAAvD,mBAAO6C,EAAP,KAAwBC,EAAxB,KACA,EAA8B9C,mBAAS,MAAvC,mBAAO5D,EAAP,KAAgB2G,EAAhB,KACA,EAAwC/C,mBAAS,MAAjD,mBAAOgC,EAAP,KAAqBC,EAArB,KACA,EAAoCjC,mBAAS,MAA7C,mBAAOgD,EAAP,KAAmBC,EAAnB,KAEMhL,EAAWC,cAEXgL,EAAe9K,aAAY,SAACC,GAAD,OAAWA,EAAM6K,gBAC1CjG,EAA6BiG,EAA7BjG,QAASC,EAAoBgG,EAApBhG,MAAO/E,GAAa+K,EAAb/K,SAiDxB,OAlBAI,qBAAU,WACJJ,IACF8J,EACE,uCACE9J,GAASqJ,MACT,gEAGL,CAACjH,EAASpC,KAWX,sBAAKrB,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,eAIjB,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYgD,MAAM,WAAlB,SACE,sBAAKhD,UAAU,iBAAf,UACGoG,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzCd,GAAW,cAAC,GAAD,CAAcxD,QAAQ,SAAtB,SAAgCwD,IAC3C4F,GACC,cAAC,GAAD,CAAcpJ,QAAQ,OAAtB,SAA8BoJ,IAE/B/E,GAAW,cAAC,GAAD,IAEZ,eAAC9D,EAAA,EAAD,CAAMuH,SA1BI,SAACjH,GACrBA,EAAEkH,iBAEEe,IAAamB,EACfE,EAAW,0BACN9K,EZda,SAAC8B,EAAMyH,EAAOE,EAAUiB,GAAxB,8CAAgC,WAAO1K,GAAP,mBAAAkC,EAAA,sEAEpDlC,EAAS,CAAEqB,KAAMnC,IAEXyE,EAAS,CACbC,QAAS,CACP,eAAgB,qBANgC,SAU7BG,IAAMmG,KAC3B,aACA,CAAEpI,OAAM4I,MAAKnB,QAAOE,YACpB9F,GAbkD,gBAU5CM,EAV4C,EAU5CA,KAMRjE,EAAS,CAAEqB,KAAMlC,EAAuB+E,QAASD,IAIjD9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IApBI,kDAsBpDjE,EAAS,CACPqB,KAAMjC,EACN8E,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UA3BsC,0DAAhC,sDYcJ+G,CAASpJ,EAAMyH,EAAOE,EAAUiB,KAqBtC,UACE,eAACxJ,EAAA,EAAK2H,MAAN,CAAYC,UAAU,OAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,mBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,OACLK,MAAOI,EACPR,YAAY,aACZC,SAAU,SAACC,GAAD,OAAOiJ,EAAQjJ,EAAEC,OAAOC,aAItC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,4BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,QACLK,MAAO6H,EACPjI,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOgI,EAAShI,EAAEC,OAAOC,aAIvC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLK,MAAO+H,EACPnI,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOkI,EAAYlI,EAAEC,OAAOC,aAI1C,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,+BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLK,MAAOkJ,EACPtJ,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOqJ,EAAmBrJ,EAAEC,OAAOC,aAIhDqJ,GACC,cAAC,GAAD,CAAcpK,QAAQ,SAAtB,SAAgCoK,IAElC,eAAC7J,EAAA,EAAK2H,MAAN,CAAYC,UAAU,MAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,8BACA,cAAC7H,EAAA,EAAKiK,KAAN,CACE5J,SAAU,SAACC,GAAD,OAhHR,SAAC4J,GACnB,GAEE,uFADAA,EAGA,OAAOJ,EAAc,0BAGvB,GADAA,EAAc,MACI,eAAdI,EAAK/J,MAAuC,cAAd+J,EAAK/J,KAiBrC,OAAO2J,EAAc,0BAhBrB,IAAM/G,EAAO,IAAIoH,SACjBpH,EAAKqH,OAAO,OAAQF,GACpBnH,EAAKqH,OAAO,gBAAiB,gBAC7BrH,EAAKqH,OAAO,aAAc,cAC1BC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,KAAMxH,IAELyH,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzH,GACL0G,EAAO1G,EAAK4H,IAAIC,eAEjBC,OAAM,SAACC,GACNnG,QAAQC,IAAIkG,MA0FeC,CAAYzK,EAAEC,OAAOyK,MAAM,KAC5ClL,GAAG,cACHK,KAAK,YACL8K,MAAM,yBACNC,QAAM,OAIV,cAAC3J,EAAA,EAAD,CAAQ9B,QAAQ,UAAUU,KAAK,SAA/B,yBAIF,cAAC1C,EAAA,EAAD,CAAKE,UAAU,OAAf,SACE,eAACD,EAAA,EAAD,gCACoB,cAAC,IAAD,CAAM4D,GAAG,SAAT,qCChCrB6J,OAjHf,YAAoC,IAAZ/J,EAAW,EAAXA,QACtB,EAA0ByF,mBAAS,IAAnC,mBAAOlG,EAAP,KAAcmG,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBU,EAAjB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOL,EAAP,KAAqBS,EAArB,KAEMnI,EAAWC,cAEXwF,EAAetF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,gBAC1CT,EAA2BS,EAA3BT,QAASC,EAAkBQ,EAAlBR,MAAOsB,EAAWd,EAAXc,OAExBV,QAAQC,IAAIS,GAEZ,IAAM+F,EAAe,WACnBtE,EAAS,IACTE,EAAY,IACZD,EAAW,IACXE,EAAgB,KAclB,OAFA7H,qBAAU,cAAU,IAGlB,cAAC,EAAD,CAAYuB,MAAM,kBAAlB,SACE,eAAC4E,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,kCACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,eAACpG,EAAA,EAAD,CAAMuH,SAhBQ,SAACjH,GACrBA,EAAEkH,iBACF1I,ETmB8B,SAAC6B,EAAO4F,EAASC,EAAcF,GAA/B,8CAA4C,WAC5ExH,EACA0D,GAF4E,yBAAAxB,EAAA,sEAK1ElC,EAAS,CACPqB,KAAM2B,IANkE,EAWtEU,IADWxD,EAV2D,EAUxEG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAhBoC,SAoBnDC,IAAMmG,KAAN,sBAErB,CAAErI,QAAO4F,UAASC,eAAcF,YAChC7D,GAvBwE,gBAoBlEM,EApBkE,EAoBlEA,KAMRjE,EAAS,CACPqB,KAAM4B,GACNiB,QAASD,IA5B+D,kDA+BpEE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QACZnE,EAAS,CACPqB,KAAM6B,GACNgB,QAASC,IArC+D,0DAA5C,wDSnBrBoI,CAAmB1K,EAAO4F,EAASC,EAAcF,IACrD3F,GAAU4F,GAAYC,GAAiBF,IAE5C8E,IACAhK,EAAQC,KAAK,gBAUP,UACG0C,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IAC1C,eAAC/D,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,0BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,QACLK,MAAOG,EACPP,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOwG,EAASxG,EAAEC,OAAOC,aAIvC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,0BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACEhC,GAAG,WACHtF,MAAO+F,EACPnG,YAAY,wBACZ2H,KAAM,EACN1H,SAAU,SAACC,GAAD,OAAOyG,EAAWzG,EAAEC,OAAOC,aAGxC+F,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,6BACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,cAAC,IAAD,UAAgBG,SAKtB,eAACvG,EAAA,EAAK2H,MAAN,CAAYC,UAAU,eAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,2BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACEhC,GAAG,WACH1F,YAAY,yBACZI,MAAOgG,EACPuB,KAAM,EACN1H,SAAU,SAACC,GAAD,OAAO2G,EAAgB3G,EAAEC,OAAOC,aAG7C+F,GACC,eAAChB,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,mCACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,cAAC,IAAD,UAAgBI,SAKtB,eAACxG,EAAA,EAAK2H,MAAN,CAAYC,UAAU,UAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,UACLK,MAAO8F,EACPlG,YAAY,4BACZC,SAAU,SAACC,GAAD,OAAO0G,EAAY1G,EAAEC,OAAOC,aAGzCsD,GAAW,cAAC,GAAD,CAAStC,KAAM,KAC3B,cAACD,EAAA,EAAD,CAAQpB,KAAK,SAASV,QAAQ,UAA9B,2BAGA,cAAC8B,EAAA,EAAD,CAAQ5D,UAAU,OAAOoD,QAASqK,EAAc3L,QAAQ,SAAxD,+BAMJ,eAAC8F,EAAA,EAAKtI,OAAN,CAAaU,UAAU,aAAvB,4BACiB,IAAI2N,MAAOC,8BC/CrBC,OA3Df,YAAmC,IAAZpK,EAAW,EAAXA,QACrB,EAAwByF,mBAAS,IAAjC,mBAAO4E,EAAP,KAAaC,EAAb,KAEM5M,EAAWC,cAEXwF,EAAetF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,gBAC1CT,EAA2BS,EAA3BT,QAASC,EAAkBQ,EAAlBR,MAAOsB,EAAWd,EAAXc,OAExBV,QAAQC,IAAIS,GAEZ,IAAM+F,EAAe,WACnBM,EAAQ,KAcV,OAFAtM,qBAAU,cAAU,IAGlB,cAAC,EAAD,CAAYuB,MAAM,iBAAlB,SACE,eAAC4E,EAAA,EAAD,WACE,cAACA,EAAA,EAAK3G,OAAN,iCACA,cAAC2G,EAAA,EAAKa,KAAN,UACE,eAACpG,EAAA,EAAD,CAAMuH,SAhBQ,SAACjH,GACrBA,EAAEkH,iBACF1I,EVqE6B,SAAC2M,GAAD,8CAAU,WACzC3M,EACA0D,GAFyC,yBAAAxB,EAAA,sEAKvClC,EAAS,CACPqB,KAAM2B,IAN+B,EAWnCU,IADWxD,EAVwB,EAUrCG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAhBC,SAqBhBC,IAAMmG,KAAN,qBAGrB,CAAEyC,QACFhJ,GAzBqC,gBAqB/BM,EArB+B,EAqB/BA,KAORjE,EAAS,CACPqB,KAAM4B,GACNiB,QAASD,IA9B4B,kDAiCjCE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,QACZnE,EAAS,CACPqB,KAAM6B,GACNgB,QAASC,IAvC4B,0DAAV,wDUrEpB0I,CAAkBF,IACtBA,IAELL,IACAhK,EAAQC,KAAK,gBAUP,UACG0C,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IAC1C,eAAC/D,EAAA,EAAK2H,MAAN,CAAYC,UAAU,OAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,0BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,OACLK,MAAOiL,EACPrL,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAOoL,EAAQpL,EAAEC,OAAOC,aAGrCsD,GAAW,cAAC,GAAD,CAAStC,KAAM,KAC3B,cAACD,EAAA,EAAD,CAAQpB,KAAK,SAASV,QAAQ,UAA9B,0BAGA,cAAC8B,EAAA,EAAD,CAAQ5D,UAAU,OAAOoD,QAASqK,EAAc3L,QAAQ,SAAxD,+BAMJ,eAAC8F,EAAA,EAAKtI,OAAN,CAAaU,UAAU,aAAvB,4BACiB,IAAI2N,MAAOC,8BCsFrBK,I,OA1IO,SAAC,GAA0B,EAAxBC,SAAyB,IAAfzK,EAAc,EAAdA,QACjC,EAAwByF,mBAAS,IAAjC,mBAAOjG,EAAP,KAAa2I,EAAb,KACA,EAA0B1C,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAsBzB,qBAAtB,mBAAO2C,EAAP,KAAYC,EAAZ,KACA,EAAgC5C,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAA8C3B,mBAAS,IAAvD,mBAAOiF,EAAP,KAAwBnC,EAAxB,KACA,EAAoC9C,qBAApC,mBAAOgD,EAAP,KAAmBC,EAAnB,KAEMhL,EAAWC,cAGTC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEF+M,EAAa9M,aAAY,SAACC,GAAD,OAAWA,EAAM6M,cACxCjI,EAA4BiI,EAA5BjI,QAASC,EAAmBgI,EAAnBhI,MAAOM,EAAY0H,EAAZ1H,QAExBjF,qBAAU,WACHJ,GAGHuK,EAAQvK,EAAS4B,MACjB0H,EAAStJ,EAASqJ,OAClBoB,EAAOzK,EAASwK,MAJhBpI,EAAQC,KAAK,OAMd,CAACD,EAASpC,IAgCb,OACE,cAAC,EAAD,CAAY2B,MAAM,eAAlB,SACE,8BACE,eAAClD,EAAA,EAAD,CAAKE,UAAU,mBAAf,UACE,cAACD,EAAA,EAAD,CAAKsO,GAAI,EAAT,SACE,eAAChM,EAAA,EAAD,CAAMuH,SAXM,SAACjH,Gf+BI,IAAC2L,Ee9B1B3L,EAAEkH,iBAEF1I,Gf4B0BmN,Ee5BH,CAAErL,OAAMyH,QAAOE,WAAUiB,Of4BvB,uCAAU,WAAO1K,EAAU0D,GAAjB,uBAAAxB,EAAA,sEAEnClC,EAAS,CAAEqB,KAAMhC,IAFkB,EAM/BqE,IADWxD,EALoB,EAKjCG,UAAaH,SAGTyD,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXH,SAeZC,IAAMmG,KAAK,qBAAsBiD,EAAMxJ,GAf3B,gBAe3BM,EAf2B,EAe3BA,KAERjE,EAAS,CAAEqB,KAAM/B,EAAqB4E,QAASD,IAE/CjE,EAAS,CAAEqB,KAAMtC,EAAoBmF,QAASD,IAE9C9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IArBb,kDAuBnCjE,EAAS,CACPqB,KAAM9B,EACN2E,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UA5BqB,0DAAV,2DepBjB,UACGa,GAAW,cAAC,GAAD,IACXO,GACC,cAAC,GAAD,CAAc5E,QAAQ,UAAtB,kCAIDsE,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IAC1C,eAAC/D,EAAA,EAAK2H,MAAN,CAAYC,UAAU,OAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,mBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,OACLC,YAAY,aACZI,MAAOI,EACPP,SAAU,SAACC,GAAD,OAAOiJ,EAAQjJ,EAAEC,OAAOC,aAGtC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,QAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,4BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,QACLC,YAAY,cACZI,MAAO6H,EACPhI,SAAU,SAACC,GAAD,OAAOgI,EAAShI,EAAEC,OAAOC,aAGvC,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,WAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLC,YAAY,iBACZI,MAAO+H,EACPlI,SAAU,SAACC,GAAD,OAAOkI,EAAYlI,EAAEC,OAAOC,aAG1C,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,+BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLC,YAAY,mBACZI,MAAOsL,EACPzL,SAAU,SAACC,GAAD,OAAOqJ,EAAmBrJ,EAAEC,OAAOC,aAEnC,IACbqJ,GACC,cAAC,GAAD,CAAcpK,QAAQ,SAAtB,SAAgCoK,IAElC,eAAC7J,EAAA,EAAK2H,MAAN,CAAYC,UAAU,MAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,qCACA,cAAC7H,EAAA,EAAKiK,KAAN,CACE5J,SAAU,SAACC,GAAD,OArFN,SAAC4J,GAEnB,GADAJ,EAAc,MACI,eAAdI,EAAK/J,MAAuC,cAAd+J,EAAK/J,KAkBrC,OAAO2J,EAAc,0BAjBrB,IAAM/G,EAAO,IAAIoH,SACjBpH,EAAKqH,OAAO,OAAQF,GACpBnH,EAAKqH,OAAO,gBAAiB,cAC7BrH,EAAKqH,OAAO,aAAc,cAC1BC,MAAM,0DAA2D,CAC/DC,OAAQ,OACRC,KAAMxH,IAELyH,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzH,GACL0G,EAAO1G,EAAK4H,IAAIC,YAChBjG,QAAQC,IAAI4E,MAEbqB,OAAM,SAACC,GACNnG,QAAQC,IAAIkG,MAoEaC,CAAYzK,EAAEC,OAAOyK,MAAM,KAC5ClL,GAAG,cACHK,KAAK,YACL8K,MAAM,yBACNC,QAAM,OAGV,cAAC3J,EAAA,EAAD,CAAQpB,KAAK,SAAS+L,QAAQ,UAA9B,yBAKJ,cAACxO,EAAA,EAAD,CACER,MAAO,CACLI,QAAS,OACT8F,WAAY,SACZ7F,eAAgB,UAJpB,SAOE,qBAAK4O,IAAK3C,EAAK4C,IAAKxL,EAAMjD,UAAU,0B,OC/EjC0O,OAnDf,YAA0C,IAAZjL,EAAW,EAAXA,QAC5B,EAA4CyF,mBAAS,IAArD,mBAAOyF,EAAP,KAAuBC,EAAvB,KAEMzN,EAAWC,cAEXyN,EAAavN,aAAY,SAACC,GAAD,OAAWA,EAAMsN,cACxC1I,EAA6B0I,EAA7B1I,QAASC,EAAoByI,EAApBzI,MAAO/E,EAAawN,EAAbxN,SAaxB,OAXAI,qBAAU,WACJJ,GACFoC,EAAQC,KAAK,YAEd,CAACD,EAASpC,IAQX,cAAC,EAAD,CAAY2B,MAAM,uBAAlB,SACE,sBAAKhD,UAAU,kBAAf,UACGoG,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzCD,GAAW,cAAC,GAAD,IACZ,eAAC9D,EAAA,EAAD,CAAMuH,SAVU,SAACjH,GACrBA,EAAEkH,iBACF1I,EhBkGkB,SAACwN,GAAD,8CAAoB,WAAOxN,GAAP,mBAAAkC,EAAA,sEAEtClC,EAAS,CAAEqB,KAAM7B,IAEXmE,EAAS,CACbC,QAAS,CACP,eAAgB,qBANkB,SAUfG,IAAM4E,IAAN,4BACA6E,GACrB7J,GAZoC,gBAU9BM,EAV8B,EAU9BA,KAKRjE,EAAS,CAAEqB,KAAM5B,EAAqByE,QAASD,IAE/C9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IAjBV,kDAmBtCjE,EAAS,CACPqB,KAAM3B,EACNwE,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAxBwB,0DAApB,sDgBlGTwJ,CAAOH,KAQZ,UACE,eAACtM,EAAA,EAAK2H,MAAN,CAAYC,UAAU,0BAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,+BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,iBACLK,MAAO8L,EACPlM,YAAY,yBACZC,SAAU,SAACC,GAAD,OAAOiM,EAAkBjM,EAAEC,OAAOC,aAIhD,qBAAK7C,UAAU,kBAAf,SACE,cAAC4D,EAAA,EAAD,CACE9B,QAAQ,UACRU,KAAK,SACLqB,KAAK,KACL7D,UAAU,iBAJZ,iC,OCoCG+O,OAxEf,YAAmC,IAAZtL,EAAW,EAAXA,QACrB,EAAsCyF,mBAAS,IAA/C,mBAAO8F,EAAP,KAAoBC,EAApB,KACA,EAA8C/F,mBAAS,IAAvD,mBAAO6C,EAAP,KAAwBC,EAAxB,KACA,EAA4C9C,mBAAS,IAArD,mBAAOyF,EAAP,KAAuBC,EAAvB,KAEMzN,EAAWC,cAEX8N,EAAY5N,aAAY,SAACC,GAAD,OAAWA,EAAM2N,aACvC/I,EAA6B+I,EAA7B/I,QAASC,EAAoB8I,EAApB9I,MAAO/E,EAAa6N,EAAb7N,SAaxB,OAXAI,qBAAU,WACJJ,GACFoC,EAAQC,KAAK,gBAEd,CAACD,EAASpC,IAQX,cAAC,EAAD,CAAY2B,MAAM,iBAAlB,SACE,sBAAKhD,UAAU,kBAAf,UACGoG,GAAS,cAAC,GAAD,CAActE,QAAQ,SAAtB,SAAgCsE,IACzCD,GAAW,cAAC,GAAD,IACZ,eAAC9D,EAAA,EAAD,CAAMuH,SAVU,SAACjH,GACrBA,EAAEkH,iBACF1I,EjB2JiB,SAACwN,EAAgBK,EAAajD,GAA9B,8CAAkD,WAAO5K,GAAP,mBAAAkC,EAAA,sEAEnElC,EAAS,CAAEqB,KAAM1B,IAEXgE,EAAS,CACbC,QAAS,CACP,eAAiB,qBAN8C,SAU5CG,IAAMmG,KAAN,oCACQsD,GAC7B,CAACK,cAAajD,mBACdjH,GAbiE,gBAU3DM,EAV2D,EAU3DA,KAMRjE,EAAU,CAAEqB,KAAMzB,EAAoBsE,QAASD,IAE/C9B,aAAagI,QAAQ,WAAYC,KAAKC,UAAUpG,IAlBmB,kDAoBnEjE,EAAS,CACPqB,KAAMxB,EACNqE,QACA,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAzBuD,0DAAlD,sDiB3JR6J,CAAMR,EAAgBK,EAAajD,KAQxC,UACE,eAAC1J,EAAA,EAAK2H,MAAN,CAAYC,UAAU,0BAAtB,UACI,eAAC5H,EAAA,EAAK2H,MAAN,CAAYC,UAAU,0BAAtB,UACF,cAAC5H,EAAA,EAAK6H,MAAN,+BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,iBACLK,MAAO8L,EACPlM,YAAY,yBACZC,SAAU,SAACC,GAAD,OAAOiM,EAAkBjM,EAAEC,OAAOC,aAG9C,cAACR,EAAA,EAAK6H,MAAN,uBACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLK,MAAOmM,EACPvM,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOsM,EAAetM,EAAEC,OAAOC,aAI7C,eAACR,EAAA,EAAK2H,MAAN,CAAYC,UAAU,0BAAtB,UACE,cAAC5H,EAAA,EAAK6H,MAAN,+BACA,cAAC7H,EAAA,EAAK8H,QAAN,CACE3H,KAAK,WACLK,MAAOkJ,EACPtJ,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOqJ,EAAmBrJ,EAAEC,OAAOC,aAIjD,qBAAK7C,UAAU,kBAAf,SACE,cAAC4D,EAAA,EAAD,CACE9B,QAAQ,UACRU,KAAK,SACLqB,KAAK,KACL7D,UAAU,iBAJZ,uCCtBGoP,OA5Bf,WACE,MAA4BlG,mBAAS,IAArC,mBAAOjD,EAAP,KAAe/E,EAAf,KAEA,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,UAAW,SAACmO,GAAD,OAAOnO,EAAUmO,MACpC,uBAAMrP,UAAU,MAAhB,UACE,cAAC,IAAD,CAAOsP,KAAK,IAAIC,UAAW/L,EAAagM,OAAK,IAC7C,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW9E,KAChC,cAAC,IAAD,CAAO6E,KAAK,YAAYC,UAAW5D,KACnC,cAAC,IAAD,CAAO2D,KAAK,gBAAgBC,UAAWb,KACvC,cAAC,IAAD,CAAOY,KAAK,SAASC,UAAWR,KAChC,cAAC,IAAD,CACEO,KAAK,aACLC,UAAW,gBAAG9L,EAAH,EAAGA,QAAH,OACT,cAAC,GAAD,CAAWwC,OAAQA,EAAQxC,QAASA,OAGxC,cAAC,IAAD,CAAO6L,KAAK,cAAcC,UAAWvG,KACrC,cAAC,IAAD,CAAOsG,KAAK,gBAAgBC,UAAW/B,KAbzC,IAcE,cAAC,IAAD,CAAO8B,KAAK,eAAeC,UAAW1B,KAdxC,IAeE,cAAC,IAAD,CAAOyB,KAAK,WAAWC,UAAWtB,QAEpC,cAAC,EAAD,QC3BSwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCURO,GAAUC,2BAAgB,CAC9BhK,WCH+B,WAAsC,IAArC3E,EAAoC,uDAA5B,CAAE8E,QAAS,IAAM8J,EAAW,uCACpE,OAAQA,EAAO3N,MACb,KAAKwB,EACH,MAAO,CAAEmC,SAAS,GACpB,KAAKlC,EACH,MAAO,CAAEkC,SAAS,EAAOE,QAAS8J,EAAO9K,SAC3C,KAAKnB,EACH,MAAO,CAAEiC,SAAS,EAAOC,MAAO+J,EAAO9K,SAEzC,QACE,OAAO9D,IDNXC,UEA8B,WAAyB,IAAxBD,EAAuB,uDAAf,GAAI4O,EAAW,uCACtD,OAAQA,EAAO3N,MACb,KAAKvC,EACH,MAAO,CAAEkG,SAAS,GACpB,KAAKjG,EACH,MAAO,CAAEiG,SAAS,EAAO9E,SAAU8O,EAAO9K,SAC5C,KAAKlF,EACH,MAAO,CAAEgG,SAAS,EAAOC,MAAO+J,EAAO9K,SACzC,KAAKjF,EACH,MAAO,GACT,QACE,OAAOmB,IFVX6K,aEciC,WAAyB,IAAxB7K,EAAuB,uDAAf,GAAI4O,EAAW,uCACzD,OAAQA,EAAO3N,MACb,KAAKnC,EACH,MAAO,CAAE8F,SAAS,GACpB,KAAK7F,EACH,MAAO,CAAE6F,SAAS,EAAO9E,SAAU8O,EAAO9K,SAC5C,KAAK9E,EACH,MAAO,CAAE4F,SAAS,EAAOC,MAAO+J,EAAO9K,SACzC,QACE,OAAO9D,IFtBXqF,aCQiC,WAAyB,IAAxBrF,EAAuB,uDAAf,GAAI4O,EAAW,uCACzD,OAAQA,EAAO3N,MACb,KAAK2B,EACH,MAAO,CAAEgC,SAAS,GACpB,KAAK/B,GACH,MAAO,CAAE+B,SAAS,EAAOO,SAAS,GACpC,KAAKrC,GACH,MAAO,CAAE8B,SAAS,EAAOC,MAAO+J,EAAO9K,SAEzC,QACE,OAAO9D,IDjBX+E,aCqBiC,WAAyB,IAAxB/E,EAAuB,uDAAf,GAAI4O,EAAW,uCACzD,OAAQA,EAAO3N,MACb,KAAKiC,GACH,MAAO,CAAE0B,SAAS,GACpB,KAAKzB,GACH,MAAO,CAAEyB,SAAS,EAAOO,SAAS,GACpC,KAAK/B,GACH,MAAO,CAAEwB,SAAS,EAAOC,MAAO+J,EAAO9K,QAASqB,SAAS,GAE3D,QACE,OAAOnF,ID9BXuF,aCkCiC,WAAyB,IAAxBvF,EAAuB,uDAAf,GAAI4O,EAAW,uCACzD,OAAQA,EAAO3N,MACb,KAAK8B,GACH,MAAO,CAAE6B,SAAS,GACpB,KAAK5B,GACH,MAAO,CAAE4B,SAAS,EAAOO,SAAS,GACpC,KAAKlC,GACH,MAAO,CAAE2B,SAAS,EAAOC,MAAO+J,EAAO9K,QAASqB,SAAS,GAE3D,QACE,OAAOnF,ID3CX6M,WEuB+B,WAAyB,IAAxB7M,EAAuB,uDAAf,GAAI4O,EAAW,uCACvD,OAAQA,EAAO3N,MACb,KAAKhC,EACH,MAAO,CAAE2F,SAAS,GACpB,KAAK1F,EACH,MAAO,CAAE0F,SAAS,EAAO9E,SAAU8O,EAAO9K,QAASqB,SAAS,GAC9D,KAAKhG,EACH,MAAO,CAAEyF,SAAS,EAAOC,MAAO+J,EAAO9K,QAASqB,SAAS,GAC3D,QACE,OAAOnF,IF/BXsN,WEmC+B,WAAyB,IAAxBtN,EAAuB,uDAAf,GAAI4O,EAAW,uCACvD,OAAQA,EAAO3N,MACb,KAAK7B,EACH,MAAO,CAAEwF,SAAS,GACpB,KAAKvF,EACH,MAAO,CAAEuF,SAAS,EAAO9E,SAAU8O,EAAO9K,QAASqB,SAAS,GAC9D,KAAK7F,EACH,MAAO,CAAEsF,SAAS,EAAOC,MAAO+J,EAAO9K,QAASqB,SAAS,GAC3D,QACE,OAAOnF,IF3CX2N,UE+C8B,WAAyB,IAAxB3N,EAAuB,uDAAf,GAAI4O,EAAW,uCACtD,OAAQA,EAAO3N,MACb,KAAK1B,EACH,MAAO,CAAEqF,SAAS,GACpB,KAAKpF,EACH,MAAO,CAAEoF,SAAS,EAAO9E,SAAU8O,EAAO9K,SAC5C,KAAKrE,EACH,MAAO,CAAEmF,SAAS,EAAOC,MAAO+J,EAAO9K,SACzC,QACE,OAAO9D,MFjDP6O,GAAe,CACnB5O,UAAW,CAAEH,SALaiC,aAAa+M,QAAQ,YAC7C9E,KAAK+E,MAAMhN,aAAa+M,QAAQ,aAChC,OAMEE,GAAa,CAACC,MAQLC,GANDC,uBACZT,GACAG,GACAO,+BAAoBC,mBAAe,WAAf,EAAmBL,MGjCzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,SAM1BvB,O","file":"static/js/main.6f6de16f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Whisk</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n\nexport const USER_VERIFY_REQUEST = \"USER_VERIFY_REQUEST\";\nexport const USER_VERIFY_SUCCESS = \"USER_VERIFY_SUCCESS\";\nexport const USER_VERIFY_FAIL = \"USER_VERIFY_FAIL\";\n\nexport const USER_EMAIL_REQUEST = \"USER_EMAIL_REQUEST\";\nexport const USER_EMAIL_SUCCESS = \"USER_EMAIL_SUCCESS\";\nexport const USER_EMAIL_FAIL = \"USER_EMAIL_SUCCESS\";\n\nexport const USER_RESET_REQUEST = \"USER_RESET_REQUEST\";\nexport const USER_RESET_SUCCESS = \"USER_RESET_SUCCESS\";\nexport const USER_RESET_FAIL = \"USER_RESET_SUCCESS\";","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Whisk</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/myrecipes\">My Recipes</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_VERIFY_REQUEST,\n  USER_VERIFY_SUCCESS,\n  USER_VERIFY_FAIL,\n  USER_EMAIL_REQUEST,\n  USER_EMAIL_SUCCESS,\n  USER_EMAIL_FAIL,\n  USER_RESET_REQUEST,\n  USER_RESET_SUCCESS,\n  USER_RESET_FAIL,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const verify = (temporarytoken) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_VERIFY_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/verify/${temporarytoken}`,\n      config\n    );\n\n    dispatch({ type: USER_VERIFY_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_VERIFY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetEmailP = (email) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_EMAIL_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\" : \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/users/sendForgotEmail`,\n      { email },\n      config\n    );\n    \n    dispatch ({ type: USER_EMAIL_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_FAIL,\n      payload:\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n    });\n  }\n};\n\nexport const reset = (temporarytoken, newpassword, confirmpassword) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_RESET_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\" : \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/users/forgotPassword/${temporarytoken}`,\n      {newpassword, confirmpassword},\n      config\n    );\n    \n    dispatch ({ type: USER_RESET_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_RESET_FAIL,\n      payload:\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n    });\n  }\n};\n\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to Whisk</h1>\n              <p className=\"subtitle\">Where all your recipes are ready in a whisk!</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>  \n              <Link to=\"/register\">\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const RECIPES_LIST_REQUEST = \"RECIPES_LIST_REQUEST\";\nexport const RECIPES_LIST_SUCCESS = \"RECIPES_LIST_SUCCESS\";\nexport const RECIPES_LIST_FAIL = \"RECIPES_LIST_FAIL\";\n\nexport const RECIPES_CREATE_REQUEST = \"RECIPES_CREATE_REQUEST\";\nexport const RECIPES_CREATE_SUCCESS = \"RECIPES_CREATE_SUCCESS\";\nexport const RECIPES_CREATE_FAIL = \"RECIPES_CREATE_FAIL\";\n\nexport const RECIPES_UPDATE_REQUEST = \"RECIPES_UPDATE_REQUEST\";\nexport const RECIPES_UPDATE_SUCCESS = \"RECIPES_UPDATE_SUCCESS\";\nexport const RECIPES_UPDATE_FAIL = \"RECIPES_UPDATE_FAIL\";\n\nexport const RECIPES_DELETE_REQUEST = \"RECIPES_DELETE_REQUEST\";\nexport const RECIPES_DELETE_SUCCESS = \"RECIPES_DELETE_SUCCESS\";\nexport const RECIPES_DELETE_FAIL = \"RECIPES_DELETE_FAIL\";\n","import {\n  RECIPES_CREATE_FAIL,\n  RECIPES_CREATE_REQUEST,\n  RECIPES_CREATE_SUCCESS,\n  RECIPES_DELETE_FAIL,\n  RECIPES_DELETE_REQUEST,\n  RECIPES_DELETE_SUCCESS,\n  RECIPES_LIST_FAIL,\n  RECIPES_LIST_REQUEST,\n  RECIPES_LIST_SUCCESS,\n  RECIPES_UPDATE_FAIL,\n  RECIPES_UPDATE_REQUEST,\n  RECIPES_UPDATE_SUCCESS,\n} from \"../constants/recipesConstants\";\nimport axios from \"axios\";\n\nexport const listRecipes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/recipes`, config);\n\n    dispatch({\n      type: RECIPES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createRecipeAction = (title, content, instructions, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/recipes/create`,\n      { title, content, instructions, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\n//New action to fetch data and post it\nexport const postFetchLinkData = (link) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n \n    \n    const { data } = await axios.post(\n      //double confirm its fetch;\n      `/api/recipes/fetch`,\n      { link },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\nexport const deleteRecipeAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/recipes/${id}`, config);\n\n    dispatch({\n      type: RECIPES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateRecipeAction = (id, title, content, instructions, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/recipes/${id}`,\n      { title, content, instructions, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteRecipeAction, listRecipes } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyRecipes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const recipeList = useSelector((state) => state.recipeList);\n  const { loading, error, recipes } = recipeList;\n\n  // const filteredRecipes = recipes.filter((recipe) =>\n  //   recipe.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const recipeDelete = useSelector((state) => state.recipeDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = recipeDelete;\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { success: successCreate } = recipeCreate;\n\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\n  const { success: successUpdate } = recipeUpdate;\n\n  useEffect(() => {\n    dispatch(listRecipes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteRecipeAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}!`}>\n      {console.log(recipes)}\n      <Link to=\"/createrecipe\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Recipe\n        </Button>\n      </Link>\n      <Link to=\"/fetchrecipe\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Fetch new Recipe\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {recipes &&\n        recipes\n          .filter((filteredRecipe) =>\n            filteredRecipe.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((recipe) => (\n            <Accordion>\n              <Card style={{ margin: 10 }} key={recipe._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(recipe)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {recipe.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button href={`/recipe/${recipe._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(recipe._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category - {recipe.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <b>Ingredients</b>\n                      <ReactMarkdown>{recipe.content}</ReactMarkdown>\n                      <b>Instructions</b>\n                      <ReactMarkdown>{recipe.instructions}</ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {recipe.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyRecipes;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteRecipeAction, updateRecipeAction } from \"../../actions/recipesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleRecipe({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [instructions, setInstructions] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\n  const { loading, error } = recipeUpdate;\n\n  const recipeDelete = useSelector((state) => state.recipeDelete);\n  const { loading: loadingDelete, error: errorDelete } = recipeDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteRecipeAction(id));\n    }\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/recipes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setInstructions(data.instructions);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setInstructions(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateRecipeAction(match.params.id, title, content, instructions, category));\n    if (!title || !content || !instructions || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Recipe\">\n      <Card>\n        <Card.Header>Edit your Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Recipe Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Ingredients</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the Ingredients\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Ingredients Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n            <Form.Group controlId=\"instructions\">\n              <Form.Label>Instructions</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the Instructions\"\n                rows={4}\n                value={instructions}\n                onChange={(e) => setInstructions(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Instructions Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{instructions}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Nutrition Facts\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Recipe\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Recipe\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleRecipe;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Notification = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport \"./ForgotPassword.css\";\n\nconst ForgotPassword = props =>{\n    return(\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n                {props.content}\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPassword;","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Notification from \"../../components/Notification\";\nimport { login, resetEmailP } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\nimport ForgotPassword from \"../../components/ForgotPassword/ForgotPassword\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [resetEmail, setResetEmail] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const resetHandler = (e) =>{\n    e.preventDefault();\n    setIsOpen(!isOpen);\n    setNotification(\n      \"Reset email sent to \" +\n      resetEmail\n    );\n    dispatch(resetEmailP(resetEmail));\n  }\n\n  const togglePopup = () =>{\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <div>\n    {isOpen && <ForgotPassword\n                    content={<>\n                    <b>Please enter your email</b>\n                    <Form onSubmit={resetHandler}>\n                      <Form.Group controlId=\"resetEmail\">\n                        <Form.Control \n                          placeholder=\"Enter email\"\n                          onChange={(e) => setResetEmail(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Button variant=\"primary\" type=\"submit\">\n                      Reset Password\n                    </Button>\n                    </Form>\n                    </>}\n                    handleClose={togglePopup}\n                    />}\n    <div className=\"Container\">\n      <div className=\"loginDiv\">\n        <div className=\"loginForm\">\n          <MainScreen title=\"LOGIN\">\n            <div className=\"loginContainer\">\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              {notification && (\n                 <Notification variant=\"info\">{notification}</Notification>\n               )}\n              {loading && <Loading />}\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n                <div className=\"button_password_container\">\n                  <div className=\"button_container\">\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                    </div>\n                  <div className=\"forgot_password\">\n                    <Link onClick={togglePopup}>Forgot Password?</Link>\n                  </div>\n                </div>\n                </Form>\n              <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n            </div>\n          </MainScreen>\n        </div>\n      </div>\n      <div className=\"foodPic\">\n        <div className=\"fPic\">\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Notification from \"../../components/Notification\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"recipezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      setNotification(\n        \"Verification email has been sent to \" +\n          userInfo.email +\n          \". Please follow the instructions to activate your account.\"\n      );\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <div className=\"Container\">\n      <div className=\"regPic\">\n        <div className=\"rfoodPic\">\n        </div>\n      </div>\n\n      <div className=\"regDiv\">\n        <div className=\"registerForm\">\n          <MainScreen title=\"REGISTER\">\n            <div className=\"loginContainer\">\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n              {notification && (\n                <Notification variant=\"info\">{notification}</Notification>\n              )}\n              {loading && <Loading />}\n\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"name\"\n                    value={name}\n                    placeholder=\"Enter name\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={confirmpassword}\n                    placeholder=\"Confirm Password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </Form.Group>\n\n                {picMessage && (\n                  <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n                )}\n                <Form.Group controlId=\"pic\">\n                  <Form.Label>Profile Picture</Form.Label>\n                  <Form.File\n                    onChange={(e) => postDetails(e.target.files[0])}\n                    id=\"custom-file\"\n                    type=\"image/png\"\n                    label=\"Upload Profile Picture\"\n                    custom\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Register\n                </Button>\n              </Form>\n              <Row className=\"py-3\">\n                <Col>\n                  Have an Account ? <Link to=\"/login\">Login</Link>\n                </Col>\n              </Row>\n            </div>\n          </MainScreen>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createRecipeAction } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateRecipe({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { loading, error, recipe } = recipeCreate;\n\n  console.log(recipe);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setInstructions(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createRecipeAction(title, content, instructions, category));\n    if (!title || !content || !instructions || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Recipe\">\n      <Card>\n        <Card.Header>Create a new Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Recipe Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Ingredients</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the Ingredients\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Recipe Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"instructions\">\n              <Form.Label>Instructions</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the instructions\"\n                value={instructions}\n                rows={4}\n                onChange={(e) => setInstructions(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Instructions Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{instructions}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Nutrition Facts\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Recipe\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateRecipe;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { createRecipeAction } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { postFetchLinkData } from \"../../actions/recipesActions\";\n\nfunction FetchRecipe({ history }) {\n  const [link, setLink] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { loading, error, recipe } = recipeCreate;\n\n  console.log(recipe);\n\n  const resetHandler = () => {\n    setLink(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(postFetchLinkData(link));\n    if (!link) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Fetch a Recipe\">\n      <Card>\n        <Card.Header>Fetch a new Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"link\">\n              <Form.Label>Recipe Link</Form.Label>\n              <Form.Control\n                type=\"link\"\n                value={link}\n                placeholder=\"Enter the Link\"\n                onChange={(e) => setLink(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Fetch Recipe\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Fetching on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default FetchRecipe;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { verify } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./VerificationScreen.css\";\n\nfunction VerificationScreen({ history }) {\n  const [temporarytoken, setTemporarytoken] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userVerify = useSelector((state) => state.userVerify);\n  const { loading, error, userInfo } = userVerify;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(verify(temporarytoken));\n  };\n\n  return (\n    <MainScreen title=\"Account Verification\">\n      <div className=\"verifyContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicTemporarytoken\">\n            <Form.Label>Activation token</Form.Label>\n            <Form.Control\n              type=\"temporarytoken\"\n              value={temporarytoken}\n              placeholder=\"Enter activation token\"\n              onChange={(e) => setTemporarytoken(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"buttonContainer\">\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              size=\"lg\"\n              className=\"activatebutton\"\n            >\n              Activate\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default VerificationScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { reset } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./ResetScreen.css\";\n\nfunction ResetScreen({ history }) {\n  const [newpassword, setNewPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [temporarytoken, setTemporarytoken] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userReset = useSelector((state) => state.userReset);\n  const { loading, error, userInfo } = userReset;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(reset(temporarytoken, newpassword, confirmpassword));\n  };\n\n  return (\n    <MainScreen title=\"Reset Password\">\n      <div className=\"verifyContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicTemporarytoken\">\n              <Form.Group controlId=\"formBasicTemporarytoken\">\n            <Form.Label>Activation token</Form.Label>\n            <Form.Control\n              type=\"temporarytoken\"\n              value={temporarytoken}\n              placeholder=\"Enter activation token\"\n              onChange={(e) => setTemporarytoken(e.target.value)}\n            />\n          </Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={newpassword}\n              placeholder=\"Password\"\n              onChange={(e) => setNewPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicTemporarytoken\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"buttonContainer\">\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              size=\"lg\"\n              className=\"activatebutton\"\n            >\n              Reset Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default ResetScreen;","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyRecipes from \"./screens/MyRecipes/MyRecipes\";\nimport SingleRecipe from \"./screens/SingleRecipe/SingleRecipe\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateRecipe from \"./screens/SingleRecipe/CreateRecipe\";\nimport FetchRecipe from \"./screens/SingleRecipe/FetchRecipe\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\nimport VerificationScreen from \"./screens/VerificationScreen/VerificationScreen\";\nimport ResetScreen from \"./screens/ResetScreen/ResetScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/verification\" component={VerificationScreen} />\n        <Route path=\"/reset\" component={ResetScreen} />\n        <Route\n          path=\"/myrecipes\"\n          component={({ history }) => (\n            <MyRecipes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/recipe/:id\" component={SingleRecipe} />\n        <Route path=\"/createrecipe\" component={CreateRecipe} />;\n        <Route path=\"/fetchrecipe\" component={FetchRecipe} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  recipeCreateReducer,\n  recipeDeleteReducer,\n  recipeListReducer,\n  recipeUpdateReducer,\n} from \"./reducers/recipesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n  userVerifyReducer,\n  userResetReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  recipeList: recipeListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  recipeCreate: recipeCreateReducer,\n  recipeDelete: recipeDeleteReducer,\n  recipeUpdate: recipeUpdateReducer,\n  userUpdate: userUpdateReducer,\n  userVerify: userVerifyReducer,\n  userReset: userResetReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  RECIPES_UPDATE_REQUEST,\n  RECIPES_UPDATE_SUCCESS,\n  RECIPES_UPDATE_FAIL,\n  RECIPES_CREATE_FAIL,\n  RECIPES_CREATE_REQUEST,\n  RECIPES_CREATE_SUCCESS,\n  RECIPES_DELETE_FAIL,\n  RECIPES_DELETE_REQUEST,\n  RECIPES_DELETE_SUCCESS,\n  RECIPES_LIST_FAIL,\n  RECIPES_LIST_REQUEST,\n  RECIPES_LIST_SUCCESS,\n} from \"../constants/recipesConstants\";\n\nexport const recipeListReducer = (state = { recipes: [] }, action) => {\n  switch (action.type) {\n    case RECIPES_LIST_REQUEST:\n      return { loading: true };\n    case RECIPES_LIST_SUCCESS:\n      return { loading: false, recipes: action.payload };\n    case RECIPES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_CREATE_REQUEST:\n      return { loading: true };\n    case RECIPES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_DELETE_REQUEST:\n      return { loading: true };\n    case RECIPES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_UPDATE_REQUEST:\n      return { loading: true };\n    case RECIPES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_VERIFY_REQUEST,\n  USER_VERIFY_SUCCESS,\n  USER_VERIFY_FAIL,\n  USER_RESET_REQUEST,\n  USER_RESET_SUCCESS,\n  USER_RESET_FAIL,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n\nexport const userVerifyReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_VERIFY_REQUEST:\n      return { loading: true };\n    case USER_VERIFY_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_VERIFY_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n\nexport const userResetReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_RESET_REQUEST:\n      return { loading: true };\n    case USER_RESET_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_RESET_FAIL:\n      return { loading: false, error: action.payload};\n    default:\n      return state;\n  }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}