{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/recipesConstants.js","actions/recipesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyRecipes/MyRecipes.js","screens/SingleRecipe/SingleRecipe.js","components/ForgotPassword/ForgotPassword.js","screens/LoginScreen/LoginScreen.js","components/Notification.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleRecipe/CreateRecipe.js","screens/SingleRecipe/FetchRecipe.js","screens/ProfileScreen/ProfileScreen.js","screens/VerificationScreen/VerificationScreen.js","App.js","reportWebVitals.js","store.js","reducers/recipesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_VERIFY_REQUEST","USER_VERIFY_SUCCESS","USER_VERIFY_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","RECIPES_LIST_REQUEST","RECIPES_LIST_SUCCESS","RECIPES_LIST_FAIL","RECIPES_CREATE_REQUEST","RECIPES_CREATE_SUCCESS","RECIPES_CREATE_FAIL","RECIPES_UPDATE_REQUEST","RECIPES_UPDATE_SUCCESS","RECIPES_UPDATE_FAIL","RECIPES_DELETE_REQUEST","RECIPES_DELETE_SUCCESS","RECIPES_DELETE_FAIL","createRecipeAction","content","instructions","category","getState","config","headers","Authorization","token","axios","post","data","payload","message","response","deleteRecipeAction","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyRecipes","search","recipeList","loading","error","recipes","recipeDelete","loadingDelete","errorDelete","successDelete","success","successCreate","recipeCreate","successUpdate","recipeUpdate","get","console","log","marginLeft","marginBottom","filter","filteredRecipe","toLowerCase","includes","reverse","map","recipe","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","createdAt","substring","SingleRecipe","match","useState","setTitle","setContent","setCategory","setInstructions","date","setDate","params","updatedAt","fetching","onSubmit","preventDefault","put","updateRecipeAction","Group","controlId","Label","Control","rows","ForgotPassword","props","handleClose","LoginScreen","email","setEmail","password","setPassword","isOpen","setIsOpen","togglePopup","setItem","JSON","stringify","login","Notification","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","notification","setNotification","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateRecipe","resetHandler","Date","toLocaleDateString","FetchRecipe","link","setLink","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","VerificationScreen","temporarytoken","setTemporarytoken","userVerify","verify","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41e76a72.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Whisk</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n\nexport const USER_VERIFY_REQUEST = \"USER_VERIFY_REQUEST\";\nexport const USER_VERIFY_SUCCESS = \"USER_VERIFY_SUCCESS\";\nexport const USER_VERIFY_FAIL = \"USER_VERIFY_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Whisk</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/myrecipes\">My Recipes</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_VERIFY_REQUEST,\n  USER_VERIFY_SUCCESS,\n  USER_VERIFY_FAIL,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const verify = (temporarytoken) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_VERIFY_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/verify/${temporarytoken}`,\n      config\n    );\n\n    dispatch({ type: USER_VERIFY_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_VERIFY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to Whisk</h1>\n              <p className=\"subtitle\">Where all your recipes are ready in a whisk!</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>  \n              <Link to=\"/register\">\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const RECIPES_LIST_REQUEST = \"RECIPES_LIST_REQUEST\";\nexport const RECIPES_LIST_SUCCESS = \"RECIPES_LIST_SUCCESS\";\nexport const RECIPES_LIST_FAIL = \"RECIPES_LIST_FAIL\";\n\nexport const RECIPES_CREATE_REQUEST = \"RECIPES_CREATE_REQUEST\";\nexport const RECIPES_CREATE_SUCCESS = \"RECIPES_CREATE_SUCCESS\";\nexport const RECIPES_CREATE_FAIL = \"RECIPES_CREATE_FAIL\";\n\nexport const RECIPES_UPDATE_REQUEST = \"RECIPES_UPDATE_REQUEST\";\nexport const RECIPES_UPDATE_SUCCESS = \"RECIPES_UPDATE_SUCCESS\";\nexport const RECIPES_UPDATE_FAIL = \"RECIPES_UPDATE_FAIL\";\n\nexport const RECIPES_DELETE_REQUEST = \"RECIPES_DELETE_REQUEST\";\nexport const RECIPES_DELETE_SUCCESS = \"RECIPES_DELETE_SUCCESS\";\nexport const RECIPES_DELETE_FAIL = \"RECIPES_DELETE_FAIL\";\n","import {\n  RECIPES_CREATE_FAIL,\n  RECIPES_CREATE_REQUEST,\n  RECIPES_CREATE_SUCCESS,\n  RECIPES_DELETE_FAIL,\n  RECIPES_DELETE_REQUEST,\n  RECIPES_DELETE_SUCCESS,\n  RECIPES_LIST_FAIL,\n  RECIPES_LIST_REQUEST,\n  RECIPES_LIST_SUCCESS,\n  RECIPES_UPDATE_FAIL,\n  RECIPES_UPDATE_REQUEST,\n  RECIPES_UPDATE_SUCCESS,\n} from \"../constants/recipesConstants\";\nimport axios from \"axios\";\n\nexport const listRecipes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/recipes`, config);\n\n    dispatch({\n      type: RECIPES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createRecipeAction = (title, content, instructions, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/recipes/create`,\n      { title, content, instructions, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteRecipeAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECIPES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/recipes/${id}`, config);\n\n    dispatch({\n      type: RECIPES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateRecipeAction = (id, title, content, instructions, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: RECIPES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/recipes/${id}`,\n      { title, content, instructions, category },\n      config\n    );\n\n    dispatch({\n      type: RECIPES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: RECIPES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteRecipeAction, listRecipes } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyRecipes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const recipeList = useSelector((state) => state.recipeList);\n  const { loading, error, recipes } = recipeList;\n\n  // const filteredRecipes = recipes.filter((recipe) =>\n  //   recipe.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const recipeDelete = useSelector((state) => state.recipeDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = recipeDelete;\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { success: successCreate } = recipeCreate;\n\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\n  const { success: successUpdate } = recipeUpdate;\n\n  useEffect(() => {\n    dispatch(listRecipes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteRecipeAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}!`}>\n      {console.log(recipes)}\n      <Link to=\"/createrecipe\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Recipe\n        </Button>\n      </Link>\n      <Link to=\"/fetchrecipe\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Fetch new Recipe\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {recipes &&\n        recipes\n          .filter((filteredRecipe) =>\n            filteredRecipe.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((recipe) => (\n            <Accordion>\n              <Card style={{ margin: 10 }} key={recipe._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(recipe)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {recipe.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button href={`/recipe/${recipe._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(recipe._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category - {recipe.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <ReactMarkdown>{recipe.content}</ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {recipe.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyRecipes;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteRecipeAction, updateRecipeAction } from \"../../actions/recipesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleRecipe({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [instructions, setInstructions] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\n  const { loading, error } = recipeUpdate;\n\n  const recipeDelete = useSelector((state) => state.recipeDelete);\n  const { loading: loadingDelete, error: errorDelete } = recipeDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteRecipeAction(id));\n    }\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/recipes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setInstructions(data.instructions);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setInstructions(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateRecipeAction(match.params.id, title, content, instructions, category));\n    if (!title || !content || !instructions || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Recipe\">\n      <Card>\n        <Card.Header>Edit your Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Recipe Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Ingredients</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Ingredients Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n            <Form.Group controlId=\"instructions\">\n              <Form.Label>Instructions</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the instructions\"\n                rows={4}\n                value={instructions}\n                onChange={(e) => setInstructions(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Instructions Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{instructions}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Recipe\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Recipe\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleRecipe;\n","import React from \"react\";\nimport \"./ForgotPassword.css\";\n\nconst ForgotPassword = props =>{\n    return(\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n                {props.content}\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPassword;","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\nimport ForgotPassword from \"../../components/ForgotPassword/ForgotPassword\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/myrecipes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const resetHandler = (e) =>{\n    e.preventDefault();\n  }\n\n  const togglePopup = () =>{\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <div>\n    {isOpen && <ForgotPassword\n                    content={<>\n                    <b>Please enter your email</b>\n                    <Form onSubmit={resetHandler}>\n                      <Form.Group controlId=\"resetEmail\">\n                        <Form.Control \n                          placeholder=\"Enter email\"\n                        />\n                      </Form.Group>\n                      <Button variant=\"primary\" type=\"submit\">\n                      Reset Password\n                    </Button>\n                    </Form>\n                    </>}\n                    handleClose={togglePopup}\n                    />}\n    <div className=\"Container\">\n      <div className=\"loginDiv\">\n        <div className=\"loginForm\">\n          <MainScreen title=\"LOGIN\">\n            <div className=\"loginContainer\">\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              {loading && <Loading />}\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n                <div className=\"button_password_container\">\n                  <div className=\"button_container\">\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                    </div>\n                  <div className=\"forgot_password\">\n                    <Link onClick={togglePopup}>Forgot Password?</Link>\n                  </div>\n                </div>\n                </Form>\n              <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n            </div>\n          </MainScreen>\n        </div>\n      </div>\n      <div className=\"foodPic\">\n        <div className=\"fPic\">\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Notification = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Notification from \"../../components/Notification\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"recipezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      setNotification(\n        \"Verification email has been sent to \" +\n          userInfo.email +\n          \". Please follow the instructions to activate your account.\"\n      );\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <div className=\"Container\">\n      <div className=\"regPic\">\n        <div className=\"rfoodPic\">\n        </div>\n      </div>\n\n      <div className=\"regDiv\">\n        <div className=\"registerForm\">\n          <MainScreen title=\"REGISTER\">\n            <div className=\"loginContainer\">\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n              {notification && (\n                <Notification variant=\"info\">{notification}</Notification>\n              )}\n              {loading && <Loading />}\n\n              <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"name\"\n                    value={name}\n                    placeholder=\"Enter name\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    placeholder=\"Enter email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={confirmpassword}\n                    placeholder=\"Confirm Password\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </Form.Group>\n\n                {picMessage && (\n                  <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n                )}\n                <Form.Group controlId=\"pic\">\n                  <Form.Label>Profile Picture</Form.Label>\n                  <Form.File\n                    onChange={(e) => postDetails(e.target.files[0])}\n                    id=\"custom-file\"\n                    type=\"image/png\"\n                    label=\"Upload Profile Picture\"\n                    custom\n                  />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                  Register\n                </Button>\n              </Form>\n              <Row className=\"py-3\">\n                <Col>\n                  Have an Account ? <Link to=\"/login\">Login</Link>\n                </Col>\n              </Row>\n            </div>\n          </MainScreen>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createRecipeAction } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateRecipe({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { loading, error, recipe } = recipeCreate;\n\n  console.log(recipe);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setInstructions(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createRecipeAction(title, content, instructions, category));\n    if (!title || !content || !instructions || !category) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Recipe\">\n      <Card>\n        <Card.Header>Create a new Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Recipe Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Ingredients</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Recipe Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"instructions\">\n              <Form.Label>Instructions</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                value={instructions}\n                rows={4}\n                onChange={(e) => setInstructions(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Instructions Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{instructions}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Recipe\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateRecipe;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createRecipeAction } from \"../../actions/recipesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction FetchRecipe({ history }) {\n  const [link, setLink] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const recipeCreate = useSelector((state) => state.recipeCreate);\n  const { loading, error, recipe } = recipeCreate;\n\n  console.log(recipe);\n\n  const resetHandler = () => {\n    setLink(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createRecipeAction(link));\n    if (!link) return;\n\n    resetHandler();\n    history.push(\"/myrecipes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Fetch a Recipe\">\n      <Card>\n        <Card.Header>Fetch a new Recipe</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"content\">\n              <Form.Label>Recipe Link</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={link}\n                placeholder=\"Enter the Link\"\n                onChange={(e) => setLink(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Fetch Recipe\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Fields\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Fetching on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default FetchRecipe;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { verify } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./VerificationScreen.css\";\n\nfunction VerificationScreen({ history }) {\n  const [temporarytoken, setTemporarytoken] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userVerify = useSelector((state) => state.userVerify);\n  const { loading, error, userInfo } = userVerify;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(verify(temporarytoken));\n  };\n\n  return (\n    <MainScreen title=\"Account Verification\">\n      <div className=\"verifyContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicTemporarytoken\">\n            <Form.Label>Activation token</Form.Label>\n            <Form.Control\n              type=\"temporarytoken\"\n              value={temporarytoken}\n              placeholder=\"Enter activation token\"\n              onChange={(e) => setTemporarytoken(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"buttonContainer\">\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              size=\"lg\"\n              className=\"activatebutton\"\n            >\n              Activate\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default VerificationScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyRecipes from \"./screens/MyRecipes/MyRecipes\";\nimport SingleRecipe from \"./screens/SingleRecipe/SingleRecipe\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateRecipe from \"./screens/SingleRecipe/CreateRecipe\";\nimport FetchRecipe from \"./screens/SingleRecipe/FetchRecipe\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\nimport VerificationScreen from \"./screens/VerificationScreen/VerificationScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/verification\" component={VerificationScreen} />\n        <Route\n          path=\"/myrecipes\"\n          component={({ history }) => (\n            <MyRecipes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/recipe/:id\" component={SingleRecipe} />\n        <Route path=\"/createrecipe\" component={CreateRecipe} />;\n        <Route path=\"/fetchrecipe\" component={FetchRecipe} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  recipeCreateReducer,\n  recipeDeleteReducer,\n  recipeListReducer,\n  recipeUpdateReducer,\n} from \"./reducers/recipesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n  userVerifyReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  recipeList: recipeListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  recipeCreate: recipeCreateReducer,\n  recipeDelete: recipeDeleteReducer,\n  recipeUpdate: recipeUpdateReducer,\n  userUpdate: userUpdateReducer,\n  userVerify: userVerifyReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  RECIPES_UPDATE_REQUEST,\n  RECIPES_UPDATE_SUCCESS,\n  RECIPES_UPDATE_FAIL,\n  RECIPES_CREATE_FAIL,\n  RECIPES_CREATE_REQUEST,\n  RECIPES_CREATE_SUCCESS,\n  RECIPES_DELETE_FAIL,\n  RECIPES_DELETE_REQUEST,\n  RECIPES_DELETE_SUCCESS,\n  RECIPES_LIST_FAIL,\n  RECIPES_LIST_REQUEST,\n  RECIPES_LIST_SUCCESS,\n} from \"../constants/recipesConstants\";\n\nexport const recipeListReducer = (state = { recipes: [] }, action) => {\n  switch (action.type) {\n    case RECIPES_LIST_REQUEST:\n      return { loading: true };\n    case RECIPES_LIST_SUCCESS:\n      return { loading: false, recipes: action.payload };\n    case RECIPES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_CREATE_REQUEST:\n      return { loading: true };\n    case RECIPES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_DELETE_REQUEST:\n      return { loading: true };\n    case RECIPES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const recipeUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RECIPES_UPDATE_REQUEST:\n      return { loading: true };\n    case RECIPES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case RECIPES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_VERIFY_REQUEST,\n  USER_VERIFY_SUCCESS,\n  USER_VERIFY_FAIL,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n\nexport const userVerifyReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_VERIFY_REQUEST:\n      return { loading: true };\n    case USER_VERIFY_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_VERIFY_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}